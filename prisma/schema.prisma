generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}
enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING
}
model User {
  id            String       @id @default(cuid())
  name          String
  phone         String       @unique
  email         String       @unique
  emailVerified DateTime?
  image         String?

  password      String?
  status        UserStatus   @default(ACTIVE)
  isVerified    Boolean      @default(false)
  token         String?
  resetExpiry   DateTime?  
  role        UserRole   @default(CUSTOMER)
  address     Address[]
  orders      Order[]
  cartItems   CartItem[]

  // Inverse : produits créés par cet utilisateur
  products    Product[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Address {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  street    String
  city      String
  country   String
  zip       String
  isDefault Boolean  @default(false)
}

model Category {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  image     String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  description String
  image       String
  price       Float
  stock       Int
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String

  // Ajout : admin qui a créé le produit
  createdBy   User       @relation(fields: [createdById], references: [id])
  createdById String

  orderItems  OrderItem[]
  cartItems   CartItem[]
  sales       Sale[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Banner {
  id        String   @id @default(cuid())
  title     String
  image     String
  link      String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String      @id @default(cuid())
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  items      OrderItem[]
  total      Float
  status     String      @default("PENDING")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderItem {
  id         String    @id @default(cuid())
  order      Order     @relation(fields: [orderId], references: [id])
  orderId    String
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int
  price      Float
}

model Sale {
  id         String    @id @default(cuid())
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int
  total      Float
  soldAt     DateTime  @default(now())
}

model CartItem {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int
  createdAt  DateTime  @default(now())
}
